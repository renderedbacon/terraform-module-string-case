#!/usr/bin/env python

from argparse import ArgumentParser
from pathlib import Path
from module_dirs import list_module_paths


def main():
    parser = ArgumentParser(description="Find all the Modules and copy outputs.tf from root to module paths.")
    parser.add_argument("--outputs", type=str, default="outputs.tf", help="Path to source outputs.tf")
    parser.add_argument("--modules", type=str, default="examples", help="Modules root to start searching from")
    parser.add_argument("--search", type=str, default="local.", help="Output string to find and replace")
    parser.add_argument("--replace", type=str, default="module.case.", help="String to use when replacing")
    args = parser.parse_args()

    outputs_src = Path(args.outputs)
    outputs_name = outputs_src.parts[-1]
    modules_root = Path(args.modules)
    search_str = args.search
    replace_str = args.replace

    # get list of validated modules
    module_paths = list_module_paths(modules_root)

    # load the outputs.tf source file
    outputs = outputs_src.read_text()

    # update outputs.tf
    outputs = outputs.replace(search_str, replace_str)
    outputs = "# generated by scripts/copy_root_outputs.py\n\n" + outputs

    # iterate through modules
    for module_path in module_paths:
        print(str(module_path))

        # write updated outputs.tf
        (module_path / outputs_name).write_text(outputs)

    return 0


if __name__ == "__main__":
    raise SystemExit(main())
